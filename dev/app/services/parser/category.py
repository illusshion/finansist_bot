# app/services/parser/category.py
# Определение категории по тексту. Без внешних зависимостей.
from __future__ import annotations
import re

# Базовые ключи (минимум, чтобы работало из коробки).
# Всё неизвестное уйдёт в "Прочее" и будет обучено через UX.
KEYWORDS: dict[str, list[str]] = {
    "Еда": [
        "еда","продукт","обед","ужин","завтрак","кофе","чай","бургер","шаурма","пицц","молок","хлеб","сыр",
        "сахар","вода","водич","квас","пиво","вино","энергет","печеньк","шоколад","суп","каша","йогурт"
    ],
    "Транспорт": [
        "такси","метро","автобус","маршрутк","троллейбус","транспорт","бензин","топлив","дизель","парковк","uber","bolt","яндекс такси"
    ],
    "Связь и интернет": [
        "связь","интернет","мобил","телефон","тариф","оператор","минут","трафик","wi-fi","вайфай"
    ],
    "Подписки": [
        "подписк","netflix","spotify","yandex","яндекс","okko","ivi","youtube","premiu","plus","плюс"
    ],
    "Коммунальные платежи": [
        "коммунал","жкх","свет","электр","газ","вода","отоплен","квартплат","аренд"
    ],
    "Развлечения": [
        "развлеч","кино","бар","паб","игр","клуб","театр","концерт","караоке"
    ],
    "Здоровье": [
        "аптек","лекарств","витамин","стоматолог","врач","мед","анализ","поликлин","клиник"
    ],
    "Одежда": [
        "одежд","кроссовк","кед","футболк","штаны","джинс","куртк","пальто","обув","носк","шапк","пояс","ремень"
    ],
    "Доход": [
        "зарплат","доход","прибыл","прем","гонорар","кэшин","кешбек","кэшбек","cashback","вернули","возврат"
    ],
}

def _tokenize(s: str) -> list[str]:
    s = s.lower()
    s = re.sub(r"[^\w\s\-]+", " ", s, flags=re.U)
    s = re.sub(r"\s+", " ", s).strip()
    return s.split()

def detect_category(text: str, op_type: str | None = None) -> str:
    """
    Возвращает одну из известных категорий или "Прочее".
    Если явно доход (op_type == 'income'), вернёт "Доход".
    """
    if not text:
        return "Прочее"
    if op_type == "income":
        return "Доход"

    tokens = _tokenize(text)
    phrase = " ".join(tokens)

    # прямые попадания по подстроке
    for cat, stems in KEYWORDS.items():
        for stem in stems:
            if stem in phrase:
                return cat

    # fallback
    return "Прочее"
