# app/handlers/search.py
# –°–≤–æ–±–æ–¥–Ω—ã–π –ø–æ–∏—Å–∫ –≤–∏–¥–∞ ¬´—Ç–∞–∫—Å–∏ –∏—é–ª—å¬ª, ¬´—Å–∏–≥–∞—Ä–µ—Ç—ã –≤—á–µ—Ä–∞¬ª, ¬´–µ–¥–∞ –Ω–µ–¥–µ–ª—è¬ª

from __future__ import annotations

from aiogram import Router, F
from aiogram.types import Message

from app.core.db import session_scope
from app.repo.users import get_or_create_user
from app.services.date_period import period_from_text
from app.services.search import search_operations

router = Router(name=__name__)


def _fmt_ops(ops: list, title: str) -> str:
    if not ops:
        return f"üîé <b>{title}</b>\n–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª."
    lines = [f"üîé <b>{title}</b>", ""]
    total_exp = total_inc = 0.0
    for i, o in enumerate(ops, 1):
        sign = "-" if o.type == "expense" else "+"
        val = abs(float(o.amount))
        name = (o.description or o.category or "–∑–∞–ø–∏—Å—å").strip()
        lines.append(f"{i}. {name} ‚Äî {sign}{val:.2f} BYN")
        if o.type == "expense": total_exp += val
        else: total_inc += val
    lines.append("")
    if total_exp: lines.append(f"üíµ –ò—Ç–æ–≥–æ —Ä–∞—Å—Ö–æ–¥–æ–≤: -{total_exp:.2f} BYN")
    if total_inc: lines.append(f"üíµ –ò—Ç–æ–≥–æ –¥–æ—Ö–æ–¥–æ–≤: +{total_inc:.2f} BYN")
    return "\n".join(lines)


@router.message(F.text.func(lambda t: t and not t.startswith("/") and any(k in t.lower() for k in ("–≤—á–µ—Ä–∞","–Ω–µ–¥–µ–ª","–º–µ—Å—è—Ü","—è–Ω–≤–∞—Ä","—Ñ–µ–≤—Ä–∞–ª","–º–∞—Ä—Ç","–∞–ø—Ä–µ–ª","–º–∞–π","–∏—é–Ω","–∏—é–ª","–∞–≤–≥—É—Å—Ç","—Å–µ–Ω—Ç—è–±—Ä","–æ–∫—Ç—è–±—Ä","–Ω–æ—è–±—Ä","–¥–µ–∫–∞–±—Ä"))))
async def text_search_period(m: Message) -> None:
    text = m.text or ""
    start, end, label = period_from_text(text)

    # –∫–ª—é—á–µ–≤–∞—è —Ñ—Ä–∞–∑–∞ = –≤—Å—ë —Å–æ–æ–±—â–µ–Ω–∏–µ (–º—ã –Ω–µ –≤—ã—Ä–µ–∑–∞–µ–º –ø–µ—Ä–∏–æ–¥ –æ—Ç–¥–µ–ª—å–Ω–æ ‚Äî –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)
    query = text
    async with session_scope() as s:
        user = await get_or_create_user(s, m.from_user.id, m.from_user.username)
        ops = await search_operations(s, user.id, query, start, end)

    await m.answer(_fmt_ops(ops, f"–ü–æ–∏—Å–∫ {label}"), parse_mode="HTML")
